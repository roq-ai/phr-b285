generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model insurance_detail {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  insurance_provider String   @db.VarChar(255)
  policy_number      String   @db.VarChar(255)
  patient_id         String?  @db.Uuid
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @db.Timestamp(6)
  patient            patient? @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model laboratory_result {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  result     String
  patient_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  patient    patient? @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model medical_record {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  record     String
  patient_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  patient    patient? @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model patient {
  id                String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name        String              @db.VarChar(255)
  last_name         String              @db.VarChar(255)
  user_id           String?             @db.Uuid
  created_at        DateTime            @default(now()) @db.Timestamp(6)
  updated_at        DateTime            @default(now()) @db.Timestamp(6)
  insurance_detail  insurance_detail[]
  laboratory_result laboratory_result[]
  medical_record    medical_record[]
  user              user?               @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prescription      prescription[]
}

model prescription {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  medication String   @db.VarChar(255)
  dosage     String   @db.VarChar(255)
  patient_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  patient    patient? @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  organization organization[]
  patient      patient[]
}
